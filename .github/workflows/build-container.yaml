name: Build Container

on:
  push:

jobs:
  build-container:
    name: Build Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add Secrets to Image
        run: |
          ensuredir() {
            if [[ ! -d $1 ]]
            then
              mkdir -p $1
            fi
          }

          ensuredir rootfs/usr/etc/ostree
          AUTH=$(echo -n "${{ gitub.actor }}:${{ secrets.READ_PACKAGES }}" | base64 -w0)
          cat << EOF > rootfs/usr/etc/ostree/auth.json
          {
            "auths": {
              "ghcr.io/jasonn3": {
                "auth": "${AUTH}"
              }
            }
          }
          EOF

          ensuredir rootfs/usr/lib/vault
          echo "${{ secrets.ROLE_ID }}" > rootfs/usr/lib/vault/role_id

          ensuredir rootfs/usr/libexec/firstboot
          cat << EOF > rootfs/usr/libexec/firstboot/playbooks.env
          export VAULT_ADDR="${{ secrets.VAULT_ADDR }}"
          export VAULT_PATH="${{ secrets.VAULT_PATH }}"
          EOF

      - name: Buildah Build
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: Containerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Push image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign the images
        if: github.ref_name == 'main'
        env:
          TAGS: ${{ steps.build-image.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          images=""
          digest=""
          for tag in ${TAGS}; do
            if [[ -z "${digest}" ]]
            then
              digest=$(cat $(echo ${tag} | tr '/:' '--')_digest.txt)
            fi
            images+="${tag}@${digest} "
          done
          cosign sign --key env://COSIGN_PRIVATE_KEY --yes ${images}
